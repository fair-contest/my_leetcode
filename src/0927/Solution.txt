解题思路

为方便描述，我统一将数组去掉前导0后，由1开头的部分称为“实体部分”。
例如：[0, 0, 1, 1, 0]的实体部分是[1, 1, 0]

要满足题意，数组中必须有三段相同的实体部分，显然这三部分实体的1和0的数目也相同，那么只要知道了数组中1的总数，首先这个总数不能被3整除的话，数组就不存在三个相同的实体，其次，如能被3整除，那么在这个总数中的1/3， 2/3位置的1， 就必然是第二和第三个实体的起点。

而第三段的终点也是已知的，即数组的尾部，所以这就知道了第三段实体的长度，这样也就可以获得后续用来比较的其它两段数组切片的长度。

这样也就可以求得了前两段实体的结尾索引， 这样就很容易直接切片比较三段实体，并返回结果。

另外，在不少编程语言里的数组切片用 “==”号比较，实际还要多跑一次遍历，这里因为这个数组是二进制特征，每段实体都代表一个独一无二的数字，所以前面遍历时，可以直接顺便求出这个数字进行比较，就不需要将数组切片比较了。 我的Python代码没做这个优化，因为python用内置模块不比解释器求值慢。 提交平台的速度 48 ms, 用Go同样逻辑实现了一下这个代码, 36 ms。

这个解法需要两次遍历（一次遍历应该也可以，但一次遍历的写法更繁琐）
时间复杂度：O(n)
空间复杂度：O(1)
