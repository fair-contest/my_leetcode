解题思路

用两个变量s1 和 s2 代表遍历时累计的交换和不交换次数，最后判断是交换次数少， 还是不交换次数少。

s1初始化为0，代表开始遍历判断前初始交换次数为0， s2为1，因为后续判断是用位置i和i-1比较，所以表示到i为止不交换次数为1。
解释一下s2这里为什么不是2, 因为这里的1是指i位置不交换，可以一直假定i不需要交换，这样问题可以简化为一次遍历时，只需要判断前面的i-1位置是否需要交换，先举个最简单例子：
[1,4]
[3,2]
可以看到i位置在数组末尾时，因为预先假定每次这样判断时i位置一直不交换，所以当判断两者中有一个需要交换时，必定交换的那个是i-1位置，问题的理解即可简化。
比如上例，判断前， s1=0, s2=1, 判断后， 因为i-1位置需要交换， s1+1, 答案就是1

再看这个例子：
[0,1,2,3,8,9,10]
[4,5,6,7,6,7,8]
要么是前4个位置数字交换，要么是最后三个位置的数字交换, 这时的三个要交换位置，即相当于前4个位置交换时的不交换，
当然这么表达可能有点容易混淆，也可以把它想象成两次遍历的交换方式会更容易理解点（第二次逆序）。
即第一次前4个位置交换，第二次后3个位置交换，取两者最小值。

然后，要判断是否i-1位置需要交换有三种情况：
情况一：无论是否交换都i位置比i-1递增的情况， 这种情况意味着这里i-1位置交换和不交换都可以，可以在这里重置一下s1, s2, 其中s1取之前s1和s2的最小值，
因为它可以是前面都不交换或都交换，所以取两个里最小值，s2和初始化时一样，在s1基础上加1。
情况二：如交换则会破坏递增序列的情况，这种情况下可视为必然不发生交换，所以只要s2加1即可。

情况三：其余情况，即交换前必然有某个不符合递增的情况，
当出现交换前就不符合递增的情况，说明要么是位置i需要交换，要么是前面都要交换（因为从左往右遍历，不再回头处理左边的值，所以一旦要交换i-1位置，要保持前面都对，即必须前面所有的都交换位置），记录前面都要交换的情况的s1可记录为之前的不交换值s2, 因为前面的不交换值即相当于前面不交换的位置都交换时的总交换值。
同理，s2可记录为之前的交换值s1基础上加1。

因为一次遍历解决，时间复杂度: O(n), n为数组长度。
只用了两个变量，空间复杂度：O(1)。
